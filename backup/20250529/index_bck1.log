require('dotenv').config();
const {
  Client,
  Collection,
  GatewayIntentBits,
  REST,
  Routes,
  EmbedBuilder,
  ActionRowBuilder,
  StringSelectMenuBuilder,
  ButtonBuilder,
  ButtonStyle,
} = require('discord.js');
const fs = require('fs');
const path = require('path');

const client = new Client({
  intents: [GatewayIntentBits.Guilds],
});

client.commands = new Collection();

// === Dynamisches Laden aller Commands (mit Validierung) ===
const commands = [];
function loadCommands(dir = path.join(__dirname, 'commands')) {
  const files = fs.readdirSync(dir);
  for (const file of files) {
    const fullPath = path.join(dir, file);
    const stat = fs.statSync(fullPath);
    if (stat.isDirectory()) {
      loadCommands(fullPath);
    } else if (file.endsWith('.js')) {
      try {
        const command = require(path.resolve(fullPath));

        if (!command.data || !command.execute) {
          console.warn(`⚠️  Ungültiger Command in ${fullPath}`);
          continue;
        }

        client.commands.set(command.data.name, command);
        commands.push(command.data.toJSON());
      } catch (error) {
        console.error(`❌ Fehler beim Laden von ${fullPath}:`, error.message);
      }
    }
  }
}
loadCommands();

// === Slash-Commands bei Discord registrieren (guild-spezifisch) ===
client.once('ready', async () => {
  console.log(`LOGIN | Eingeloggt als ${client.user.tag}`);

  const rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN);

  const guildId = '822450632598355999';

  try {
    console.log('DELETE | Lösche alte Guild-Slash-Commands...');
    await rest.put(
      Routes.applicationGuildCommands(client.user.id, guildId),
      { body: [] }
    );
    console.log('DELETE | Alte Guild-Commands gelöscht.');

    console.log('REGISTER | Registriere neue Guild-Slash-Commands...');
    await rest.put(
      Routes.applicationGuildCommands(client.user.id, guildId),
      { body: commands }
    );
    console.log('SUCCESSFULLY | Registrierung abgeschlossen!');
  } catch (error) {
    console.error('ERROR | Fehler beim Registrieren:', error);
  }
});

// === Interaktions-Handler ===
client.on('interactionCreate', async interaction => {
  if (interaction.isChatInputCommand()) {
    const command = client.commands.get(interaction.commandName);
    if (!command) return;

    try {
      await command.execute(interaction);
    } catch (err) {
      console.error(err);
      await interaction.reply({ content: '❌ Fehler beim Ausführen.', ephemeral: true });
    }
  }

  else if (interaction.isStringSelectMenu()) {
    if (interaction.customId === 'help-category') {
      const category = interaction.values[0];

      const filtered = [...client.commands.values()].filter(cmd => cmd.category === category);
      const embed = new EmbedBuilder()
        .setTitle(`📁 Kategorie: ${category}`)
        .setDescription('Folgende Befehle gehören zu dieser Kategorie:')
        .setColor(0x5865f2)
        .addFields(filtered.map(cmd => ({
          name: `/${cmd.data.name}`,
          value: cmd.data.description || 'Keine Beschreibung',
        })));

      await interaction.update({ embeds: [embed] });
    }
  }

  else if (interaction.isButton()) {
    if (interaction.customId === 'close-help') {
      await interaction.message.delete().catch(() => {});
    }
  }
});

client.login(process.env.DISCORD_TOKEN);
